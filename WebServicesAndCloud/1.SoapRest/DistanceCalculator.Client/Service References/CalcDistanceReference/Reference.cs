//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DistanceCalculator.Client.CalcDistanceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalcDistanceReference.ICalculator")]
    public interface ICalculator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/CalcDistance", ReplyAction="http://tempuri.org/ICalculator/CalcDistanceResponse")]
        double CalcDistance(DistanceCalculator.Service.Point startPoint, DistanceCalculator.Service.Point endPoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/CalcDistance", ReplyAction="http://tempuri.org/ICalculator/CalcDistanceResponse")]
        System.Threading.Tasks.Task<double> CalcDistanceAsync(DistanceCalculator.Service.Point startPoint, DistanceCalculator.Service.Point endPoint);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorChannel : DistanceCalculator.Client.CalcDistanceReference.ICalculator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorClient : System.ServiceModel.ClientBase<DistanceCalculator.Client.CalcDistanceReference.ICalculator>, DistanceCalculator.Client.CalcDistanceReference.ICalculator {
        
        public CalculatorClient() {
        }
        
        public CalculatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double CalcDistance(DistanceCalculator.Service.Point startPoint, DistanceCalculator.Service.Point endPoint) {
            return base.Channel.CalcDistance(startPoint, endPoint);
        }
        
        public System.Threading.Tasks.Task<double> CalcDistanceAsync(DistanceCalculator.Service.Point startPoint, DistanceCalculator.Service.Point endPoint) {
            return base.Channel.CalcDistanceAsync(startPoint, endPoint);
        }
    }
}
